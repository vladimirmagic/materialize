/* Text Inputs + Textarea
   ========================================================================== */

/* Style Placeholders */

::placeholder {
  color: $placeholder-text-color;
}

/* Text inputs */

.input-focused {
  width: 100%;
  margin: 0;
  border: 2px solid $input-focus-color;
}

input:not([type]):not(.browser-default),
input[type=text]:not(.browser-default),
input[type=password]:not(.browser-default),
input[type=email]:not(.browser-default),
input[type=url]:not(.browser-default),
input[type=time]:not(.browser-default),
input[type=date]:not(.browser-default),
input[type=datetime]:not(.browser-default),
input[type=datetime-local]:not(.browser-default),
input[type=tel]:not(.browser-default),
input[type=number]:not(.browser-default),
input[type=search]:not(.browser-default),
textarea.materialize-textarea {

  // General Styles
  position: relative;
  z-index: 1;
  background-color: transparent;
  border: $input-border;
  border-radius: 0;
  outline: none;
  width: calc(100% - 2px);
  height: $input-height;
  font-size: $input-font-size;
  color: $color-base;
  margin: 0 1px;
  padding: $input-padding;
  box-shadow: none;
  box-sizing: border-box;

  &.autocomplete {
    padding-right: 32px;
  }

  .input-field--label & {
    height: $input-height + 8;
  }

  
  // Disabled input style
  &:disabled,
  &[readonly="readonly"] {
    color: $input-disabled-color;
    border-bottom: $input-disabled-border;

    & ~ .caret {
      fill: $input-disabled-color;
    }
  }

  // Disabled label style
  &:disabled+label,
  &[readonly="readonly"]+label {
    color: $input-disabled-color;
  }

  // Focused input style
  .input-field--filled &,
  &:focus-within:not([readonly]) {
    @extend .input-focused;
  }

  // Hide helper text on data message
  &.valid ~ .helper-text[data-success],
  &:focus.valid ~ .helper-text[data-success],
  &.invalid ~ .helper-text[data-error],
  &:focus.invalid ~ .helper-text[data-error] {
    @extend %hidden-text;
  }

  // Valid Input Style
  &.valid,
  &:focus.valid {
    @extend %valid-input-style;
  }

  // Custom Success Message
  &.valid ~ .helper-text:after,
  &:focus.valid ~ .helper-text:after {
    @extend %custom-success-message;
  }
  &:focus.valid ~ label {
    color: $input-success-color;
  }

  // Invalid Input Style
  &.invalid,
  &:focus.invalid {
    @extend %invalid-input-style;
  }

  // Custom Error message
  &.invalid ~ .helper-text:after,
  &:focus.invalid ~ .helper-text:after {
    @extend %custom-error-message;
  }
  &:focus.invalid ~ label {
    color: $input-error-color;
  }

  // Form Message Shared Styles
  & + label:after {
    @extend %input-after-style;
  }
}


/* Validation Sass Placeholders */
%valid-input-style {
  border: 2px solid $input-success-color;
}
%invalid-input-style {
  border: 2px solid $input-invalid-border;
}
%hidden-text {
  color: transparent;
  user-select: none;
  pointer-events: none;
}
%custom-success-message {
  content: attr(data-success);
  color: $input-success-color;
}
%custom-error-message {
  content: attr(data-error);
  color: $input-error-color;
}
%input-after-style {
  display: block;
  content: "";
  position: absolute;
  top: 100%;
  left: 0;
  opacity: 0;
  transition: .2s opacity ease-out, .2s color ease-out;
}

.input-field__label-fixed {
  z-index: 100;
  transform: translateY(-8px);
  transform-origin: 0 0;
  color: $color-base !important;
  font-size: 12px !important;
  font-weight: 600;
  letter-spacing: .12em;
  text-transform: uppercase;
  white-space: nowrap;
  background: #fff;
}

.input-field--label label {
  @extend .input-field__label-fixed;
}


// Styling for input field wrapper
.input-field {
  .caret {
    position: absolute;
    right: 16px;
    top: 0;
    bottom: 0;
    width: 1em;
    height: 1em;
    margin: auto 0;
    z-index: 0;
    cursor: pointer;
  }

  input.opened ~ .caret {
    transform: rotate(180deg);
  }

  // Inline styles
  &.inline {
    display: inline-block;
    vertical-align: middle;
    margin-left: 5px;

    input,
    .select-dropdown {
      margin-bottom: 1rem;
    }
  }

  position: relative;
  margin-top: 1rem;
  margin-bottom: 1rem;
  &.input-field--no-bottom-gap {
    margin-bottom: 0;
  }

  & > label,
  .file-path-wrapper label {
    position: absolute;
    top: 0;
    left: 16px;
    padding: 0 8px;
    font-size: 16px;
    cursor: text;
    color: $input-border-color;
    text-align: initial;
    transition: transform .2s ease-out, color .2s ease-out;
    transform-origin: 0% 100%;
    transform: translateY(14px);

    .input-field--label &,
    &:not(.label-icon).active {
      @extend .input-field__label-fixed;
    }
  }

  // Autofill + date + time inputs
  & > input[type]:-webkit-autofill:not(.browser-default):not([type="search"]) + label,
  & > .materialize-textarea:-webkit-autofill + label,
  & > input[type=date]:not(.browser-default) + label,
  & > input[type=time]:not(.browser-default) + label {
    transform: translateY(-18px) scale(.8);
    transform-origin: 0 0;
  }

  .helper-text {
    &::after {
      opacity: 1;
      position: absolute;
      top: 0;
      left: 0;
    }

    position: relative;
    min-height: 18px;
    display: block;
    font-size: 12px;
    color: rgba(0,0,0,.54);
    cursor: default;
  }

  // Prefix Icons
  .prefix {
    position: absolute;
    width: $input-height;
    font-size: $input-icon-size;
    transition: color .2s;
    top: ($input-height - $input-icon-size) / 2;

    &.active { color: $input-focus-color; }
  }

  .prefix ~ input,
  .prefix ~ textarea,
  .prefix ~ label,
  .prefix ~ .validate ~ label,
  .prefix ~ .helper-text,
  .prefix ~ .autocomplete-content {
    margin-left: 3rem;
    width: 92%;
    width: calc(100% - 3rem);
  }

  .prefix ~ label { margin-left: 3rem; }

  @media #{$medium-and-down} {
    .prefix ~ input {
      width: 86%;
      width: calc(100% - 3rem);
    }
  }

  @media #{$small-and-down} {
    .prefix ~ input {
      width: 80%;
      width: calc(100% - 3rem);
    }
  }
}


/* Search Field */

.input-field input[type=search] {
  display: block;
  line-height: inherit;
  transition: .3s background-color;

  .nav-wrapper & {
    height: inherit;
    padding-left: 4rem;
    width: calc(100% - 4rem);
    border: 0;
    box-shadow: none;
  }

  &:focus:not(.browser-default) {
    background-color: $input-background;
    border: 0;
    box-shadow: none;
    color: #444;

    & + label i,
    & ~ .mdi-navigation-close,
    & ~ .material-icons {
      color: #444;
    }
  }

  & + .label-icon {
    transform: none;
    left: 1rem;
  }

  & ~ .mdi-navigation-close,
  & ~ .material-icons {
    position: absolute;
    top: 0;
    right: 1rem;
    color: transparent;
    cursor: pointer;
    font-size: $input-icon-size;
    transition: .3s color;
  }
}


/* Textarea */

// Default textarea
textarea {
  width: 100%;
  height: $input-height;
  background-color: transparent;

  &.materialize-textarea {
    line-height: normal;
    overflow-y: hidden; /* prevents scroll bar flash */
    padding: 24px;
    resize: none;
    min-height: $input-height;
    box-sizing: border-box;

    &:focus {
      min-height: 5.5em;
    }

    &:focus-within {
      padding: 23px 24px;
    }
  }
}

// For textarea autoresize
.hiddendiv {
  visibility: hidden;
  white-space: pre-wrap;
  word-wrap: break-word;
  overflow-wrap: break-word; /* future version of deprecated 'word-wrap' */
  padding-top: 1.2rem; /* prevents text jump on Enter keypress */

  // Reduces repaints
  position: absolute;
  top: 0;
  z-index: -1;
}


/* Autocomplete */
.autocomplete-content {
  min-width: 440px;

  li {
    .highlight { color: #444; }

    img {
      height: $dropdown-item-height - 8;
      width: $dropdown-item-height - 8;
      margin: 4px 0 4px 8px;
    }
  }
}

/* Character Counter */
.character-counter {
  min-height: 18px;
}

.input-field--search {
  input[type=search]:not(.browser-default) {
    width: calc(100% - 2px);
    height: 52px;
    margin: 0 1px;
    padding: 0 52px 0 24px;
    box-sizing: border-box;
    border: 1px solid $color-grey;
    border-radius: 52px;
    transition: all .3s;
    background: white;
  }

  &:focus-within {
    input[type=search]:not(.browser-default) {
      @extend .input-focused;
      border: 2px solid $input-focus-color;
      box-shadow: 0px 4px 30px -10px rgba(0, 0, 0, 0.15);
    }
  }

  .icon {
    width: 20px;
    height: 20px;
  }
}

.input-field__button {
  position: absolute;
  top: 50%;
  right: 8px;
  width: 40px;
  height: 40px;
  line-height: 40px;
  transform: translateY(-50%);
}

.input-field__button--blog {
    position: absolute;
    bottom: 0;
    right: 0;
    width: 40px;
    height: 40px;
    padding: 0;
    cursor: pointer;
}

.input-field__clean {
  position: absolute;
  right: .25rem;
  top: 50%;
  transform: translateY(-50%);
  display: none;
  width: 40px;
  height: 40px;
  line-height: 40px;

  .icon {
    width: 20px;
    height: 20px;
  }
}

.input-field--filled:not(.input-field--select) {
  input {
    @extend .input-focused;
  }

  .input-field__clean {
    display: inline-block;
  }

  .caret {
    display: none;
  }
}

.input-field--filled.input-field--select {
  .input-field__clean {
    .icon {
       background: #fff;
    }
  }
}

.input-field--select:not(.input-field--filled) {
  input {
    color: $color-font-grey;
  }
}

.input-field__helper {
  display: none;
  margin-top: .5em;
  font-size: 14px;
  line-height: 1.2;

  .error &,
  .error + &,
  &.error {
    display: block;
    width: 100%;
    color: $color-red;
  }

  .errorMessage {
    margin: 0;
  }
}

.input-field.error {
  input:not(.browser-default),
  textarea.materialize-textarea {
    @extend .input-focused;
    border: 2px solid $color-red !important;
  }  
  .input-field__helper {
    display: block;
    color: $color-red;
  }
}

.input-field.valid {
  input:not(.browser-default) {
    @extend .input-focused;
    border: 2px solid $color-green;
  }  
  .input-field__helper {
    display: block;
    color: $color-green;
  }
}

.input-field.input-field--phone {
  display: flex;
  justify-content: space-between;

  .input-field.input-field--phone-code {
    margin: 0;
    flex: 0 0 9em;
  }

  .input-field.input-field--phone-number {
    flex: 1 1 100%;
    margin: 0 0 0 1em;
  }
}

@media #{$medium-and-down} {
  .autocomplete-content {
    min-width: 0;
  }
}
